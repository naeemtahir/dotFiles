# Add following lines to $HOME/.bashrc
#if [ -f $HOME/.bashrc_additions ]; then
#    . $HOME/.bashrc_additions
#fi

export HISTCONTROL=ignoreboth:erasedups
shopt -s direxpand
# Enable vi style command line editing
#set -o vi

export PATH=$PATH:$HOME/bin
export PDSH_RCMD_TYPE=ssh
if [[ "$OSTYPE" == "linux"* ]] && [[ $(uname -a) =~ .*Microsoft.* ]]; then
    export K=/media/k
elif [[ "$OSTYPE" == "linux"* ]] && [[ $(uname -a) =~ .*WSL2.* ]]; then
    export K=/media/k
elif [[ "$OSTYPE" == "linux"* ]] && ([[ $(uname -a) =~ .*Debian.* ]] || [[ $(uname -a) =~ .*Ubuntu.* ]]); then
    export K=/media/k
    source $K/MySettings/DevEnv/setenv_lin.sh
elif [[ "$OSTYPE" == "darwin"* ]]; then
    export K=$HOME/k
    source $K/MySettings/DevEnv/setenv_mac.sh
fi

export MYWIKI=$K/MyWiki
export TODO=$K/MyDocuments/TODO.txt

# To configure your terminal to automatically start tmux as default, add the following lines to your
# $HOME/.bashrc file, just above your aliases section.
#
# Start tmux by default, if not running interactively do not do anything. Also launch it only when when there's a
#  graphical environment running (comment 'if [[ $DISPLAY ]]; then' section if you want it to start in non GUI
#  environments, however it will prevent you from launching X manually with 'startx' afterwards.
#
# Referece: https://wiki.archlinux.org/index.php/Tmux#Start_tmux_on_every_shell_login

#if [[ $DISPLAY ]]; then
#    # If not running interactively, do not do anything
#    [[ $- != *i* ]] && return
#
#    if which tmux >/dev/null 2>&1; then
#       #if not inside a tmux session, and if no session is started, start a new session
#       test -z "$TMUX" && (tmux attach || tmux new-session)
#    fi
#fi

if [ -f $HOME/.env ]; then
    . $HOME/.env
fi

if [ -f $HOME/.aliases ]; then
    . $HOME/.aliases
fi

if [ -f $HOME/.functions ]; then
    . $HOME/.functions
fi

if [ -f $HOME/.destination_aliases ]; then
    . $HOME/.destination_aliases
fi

if [ -f $HOME/.mount_aliases ]; then
    . $HOME/.mount_aliases
fi

if [ -f $HOME/.git_aliases ]; then
    . $HOME/.git_aliases
fi

if [ -f $HOME/.docker_aliases ]; then
    . $HOME/.docker_aliases
fi

if [ -f $HOME/.k8s_aliases ]; then
    . $HOME/.k8s_aliases
fi

# kubectl autocomplete
if [[ "$OSTYPE" == "linux"* ]] && ([[ $(uname -a) =~ .*Debian.* ]] || [[ $(uname -a) =~ .*Ubuntu.* ]]); then
    if command -v kubectl &> /dev/null; then
        source <(kubectl completion bash) # setup autocomplete in bash into the current shell, bash-completion package should be installed first.
    fi
fi

# Display TODOs
todo
