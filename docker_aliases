# Add following lines to $HOME/.bashrc or $HOME/.zshrc
#if [ -f $HOME/.docker_aliases ]; then
#    . $HOME/.docker_aliases
#fi
alias docker_aliases='less $HOME/.docker_aliases'

alias d='docker'

alias dcl="docker container ls" # List running containers
alias dcla="docker container ls -a" # List all containers
alias dcll="docker container ls -l" # List latest container
alias dcip="docker container inspect --format '{{ .NetworkSettings.IPAddress }}'"   # Get container IP
alias dcr="docker container run -i -t -P" # Run interactive container, e.g., $dcr base /bin/bash
alias dcrd="docker container run -d -P" # Run demonized container, e.g., $dcrd base /bin/echo hello
alias dcex="docker container exec"  # Execute command in container, e.g., $dcex base ls /
alias dcexi="docker container exec -it" # Execute interactive command in container, e.g., $dcexi base /bin/bash
alias dcsh='function _dcsh() { if [ "$#" -eq 1 ]; then docker container exec -it $1 sh; else echo "Usage: dcsh <container_id>"; fi };_dcsh' # sh into container
alias dcbash='function _dcbash() { if [ "$#" -eq 1 ]; then docker container exec -it $1 bash; else echo "Usage: dcbash <container_id>"; fi };_dcbash'   # bash into container
alias dcs='docker container stop'   # Stop container
alias dcsrm='function _dcsrm() { if [ "$#" -eq 1 ]; then docker container stop $1 && docker container rm $1; else echo "Usage: dcsrm <container_id>"; fi };_dcsrm'  # Stop and Remove container
alias dcsa='docker container stop $(docker container ps -a -q)' # Stop all containers
alias dcsrma='docker container stop $(docker container ps -a -q) && docker container rm $(docker container ps -a -q)'   # Stop and Remove all containers
alias dcrm='docker container rm'    # Remove container
alias dcrma='docker container rm $(docker container ps -a -q)'  # Remove all containers

alias dil="docker images"   # List images
alias dirm='docker image rm'    # Remove image
alias dirma='docker image rm $(docker image ls -q)' # Remove all images

alias dbuild='function _dbuild() { if [ "$#" -eq 1 ]; then docker build -t=$1 .; else echo "Usage: dbuild <image_id>"; fi };_dbuild'    # Dockerfile build, e.g., $dbuild ntr/test 
